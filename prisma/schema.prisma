// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  clerkId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  JournalEntry JournalEntry[]
  Analysis Analysis[]
}

model JournalEntry {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id],onDelete: Cascade)

  content String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Analysis Analysis?

  

  @@unique([userId,id])

}

model Analysis {
  id        String       @id @default(uuid())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  entryId   String
  entry     JournalEntry @relation(fields: [entryId], references: [id],onDelete: Cascade)

  userId   String
  user     User   @relation(fields: [userId], references: [id],onDelete: Cascade)

  mood     String
  subject  String
  negative Boolean
  summary  String
  color   String
  sentimentScore Float @default(0)
  song     String
  image  String?
  AnalysisImage AnalysisImage?


  @@unique([entryId])
  @@index([userId])
}




